!function(t){var e={};function n(r){if(e[r])return e[r].exports;var o=e[r]={i:r,l:!1,exports:{}};return t[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var o in t)n.d(r,o,function(e){return t[e]}.bind(null,o));return r},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=0)}([function(t,e,n){"use strict";n.r(e),n.d(e,"getStopAndSearch",(function(){return a}));var r=function(t,e,n,r){return new(n||(n=Promise))((function(o,a){function i(t){try{l(r.next(t))}catch(t){a(t)}}function u(t){try{l(r.throw(t))}catch(t){a(t)}}function l(t){var e;t.done?o(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(i,u)}l((r=r.apply(t,e||[])).next())}))},o=function(t,e){var n,r,o,a,i={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return a={next:u(0),throw:u(1),return:u(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function u(a){return function(u){return function(a){if(n)throw new TypeError("Generator is already executing.");for(;i;)try{if(n=1,r&&(o=2&a[0]?r.return:a[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,a[1])).done)return o;switch(r=0,o&&(a=[2&a[0],o.value]),a[0]){case 0:case 1:o=a;break;case 4:return i.label++,{value:a[1],done:!1};case 5:i.label++,r=a[1],a=[0];continue;case 7:a=i.ops.pop(),i.trys.pop();continue;default:if(!(o=(o=i.trys).length>0&&o[o.length-1])&&(6===a[0]||2===a[0])){i=0;continue}if(3===a[0]&&(!o||a[1]>o[0]&&a[1]<o[3])){i.label=a[1];break}if(6===a[0]&&i.label<o[1]){i.label=o[1],o=a;break}if(o&&i.label<o[2]){i.label=o[2],i.ops.push(a);break}o[2]&&i.ops.pop(),i.trys.pop();continue}a=e.call(t,i)}catch(t){a=[6,t],r=0}finally{n=o=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,u])}}},a=function(t,e,n){return r(void 0,void 0,void 0,(function(){return o(this,(function(r){switch(r.label){case 0:return[4,fetch("https://data.police.uk/api/stops-street?lat="+t+"&lng="+e+"&date="+n)];case 1:return[4,r.sent().json()];case 2:return[2,r.sent()]}}))}))},i=51.6222752,u=-.2787604,l=function(t,e,n){a(t,e,n).then((function(n){var r={lat:t,lng:e},o=new google.maps.Map(document.getElementById("map"),{zoom:14,center:r});n.forEach((function(t){var e={lat:Number(t.location.latitude),lng:Number(t.location.longitude)},n="";n=t.legislation.includes("Drugs")?"/assets/drugs.png":t.legislation.includes("Firearms")?"/assets/gun.png":"/assets/pig.jpg";new google.maps.Marker({position:e,map:o,title:t.legislation,animation:google.maps.Animation.DROP,icon:n})})),google.maps.event.addListener(o,"click",(function(t){i=t.latLng.lat(),u=t.latLng.lng(),l(i,u,"2019-01")}))}))};$(document).ready((function(){$("#date").attr("value","2019-01"),$("#date").attr("min","2017-01"),l(i,u,$("#date").val().toString())})),$("#date").change((function(){l(i,u,$("#date").val().toString())}))}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,